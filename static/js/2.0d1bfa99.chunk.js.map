{"version":3,"sources":["../../sdk/js/lib/solana/nft/nft_bridge.js","../node_modules/webpack/buildin/harmony-module.js","../../sdk/js/lib/solana/nft/nft_bridge_bg.js"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","cachedTextDecoder","TextDecoder","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","passArray8ToWasm0","takeObject","idx","ret","getObject","dropObject","transfer_native_ix","program_id","bridge_id","payer","message","from","mint","nonce","target_address","target_chain","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","ptr6","len6","transfer_wrapped_ix","from_owner","token_chain","token_address","token_id","ptr7","len7","ptr8","len8","complete_transfer_native_ix","to_authority","vaa","complete_transfer_wrapped_ix","upgrade_contract_ix","spill","register_chain_ix","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","emitter_address","retptr","r0","r1","v1","approval_authority_address","wrapped_address","v3","wrapped_meta_address","mint_address","v2","parse_wrapped_meta","data","parse_endpoint_registration","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse"],"mappings":"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","file":"static/js/2.0d1bfa99.chunk.js","sourcesContent":["export * from \"./nft_bridge_bg.js\";\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as wasm from './nft_bridge_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} mint\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_native_ix(program_id, bridge_id, payer, message, from, mint, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, nonce, ptr6, len6, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} from_owner\n* @param {number} token_chain\n* @param {Uint8Array} token_address\n* @param {Uint8Array} token_id\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_wrapped_ix(program_id, bridge_id, payer, message, from, from_owner, token_chain, token_address, token_id, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(from_owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ptr7 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n    var len7 = WASM_VECTOR_LEN;\n    var ptr8 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len8 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, token_chain, ptr6, len6, ptr7, len7, nonce, ptr8, len8, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_native_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_wrapped_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function upgrade_contract_ix(program_id, bridge_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function register_chain_ix(program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.register_chain_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function emitter_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.emitter_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function approval_authority_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.approval_authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} token_address\n* @param {number} token_chain\n* @param {Uint8Array} token_id\n* @returns {Uint8Array}\n*/\nexport function wrapped_address(program_id, token_address, token_chain, token_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.wrapped_address(retptr, ptr0, len0, ptr1, len1, token_chain, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nexport function wrapped_meta_address(program_id, mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.wrapped_meta_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_wrapped_meta(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_wrapped_meta(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_endpoint_registration(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_endpoint_registration(ptr0, len0);\n    return takeObject(ret);\n}\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}\n;\n"],"sourceRoot":""}