{"version":3,"sources":["images/Header.png","App.js","components/BackgroundImage.tsx","contexts/BetaContext.tsx","contexts/EthereumProviderContext.tsx","contexts/SolanaWalletContext.tsx","icons/avax.svg","icons/bsc.svg","icons/eth.svg","icons/oasis-network-rose-logo.svg","icons/polygon.svg","icons/solana.svg","icons/terra.svg","utils/consts.ts","contexts/TerraWalletContext.tsx","ErrorBoundary.js","muiTheme.js","store/attestSlice.ts","store/helpers.ts","store/nftSlice.ts","store/transferSlice.ts","store/tokenSlice.ts","store/feeSlice.ts","store/index.ts","index.js"],"names":["useStyles","makeStyles","theme","bg","display","flexDirection","minHeight","headerImage","position","zIndex","top","background","Header","backgroundRepeat","backgroundPosition","backgroundSize","width","height","centeredContainer","marginTop","spacing","marginBottom","textAlign","App","classes","className","content","Container","maxWidth","style","Typography","variant","component","Link","href","target","rel","color","link","holeOuterContainer","holeInnerContainer","left","transform","overflow","justifyContent","holeImage","blurred","filter","opacity","BackgroundImage","BetaContext","React","createContext","BetaContextProvider","children","useState","isBetaEnabled","setIsBetaEnabled","useEffect","userEntered","secretSequence","secretListener","event","k","keyCode","toString","length","push","prev","window","addEventListener","removeEventListener","Provider","value","EthereumProviderContext","connect","disconnect","provider","undefined","chainId","signer","signerAddress","providerError","EthereumProviderProvider","setProviderError","setProvider","setChainId","setSigner","setSignerAddress","useCallback","detectEthereumProvider","then","detectedProvider","ethers","providers","Web3Provider","send","getNetwork","network","catch","getSigner","getAddress","address","on","BigNumber","from","toNumber","e","accounts","contextValue","useMemo","SolanaWalletProvider","props","wallets","getPhantomWallet","getSolflareWallet","getMathWallet","getSolletWallet","useWallet","CHAINS","id","CHAIN_ID_AVAX","name","logo","avaxIcon","CHAIN_ID_OASIS","oasisIcon","CHAIN_ID_BSC","bscIcon","CHAIN_ID_ETH","ethIcon","CHAIN_ID_POLYGON","polygonIcon","CHAIN_ID_SOLANA","solanaIcon","CHAIN_ID_TERRA","terraIcon","TERRA_HOST","CHAIN_ID_ETHEREUM_ROPSTEN","reduce","obj","chain","URL","chainID","localnet","Map","EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v","Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB","lcd","walletConnectChainIds","TerraWalletContext","connected","wallet","TerraWalletWrapper","terraWallet","setWallet","setConnected","availableConnectTypes","TerraWalletProvider","defaultNetwork","ErrorBoundary","state","hasError","error","errorInfo","console","this","Component","COLORS","responsiveFontSizes","createTheme","palette","type","default","paper","divider","text","primary","main","light","secondary","typography","fontFamily","fontSize","h1","fontWeight","h2","h4","overrides","MuiCssBaseline","scrollbarWidth","scrollbarColor","backgroundColor","borderRadius","MuiAccordion","root","rounded","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","MuiAlert","border","MuiButton","letterSpacing","outlinedSizeSmall","padding","MuiLink","MuiPaper","backdropFilter","MuiStepper","MuiStep","MuiStepConnector","lineVertical","borderLeftWidth","MuiStepContent","marginLeft","paddingLeft","MuiStepLabel","label","textTransform","MuiTabs","borderBottom","indicator","MuiTab","textColorInherit","MuiTableCell","initialState","activeStep","sourceChain","sourceAsset","targetChain","attestTx","signedVAAHex","isSending","isCreating","createTx","attestSlice","createSlice","reducers","incrementStep","decrementStep","setStep","action","payload","setSourceChain","prevSourceChain","setSourceAsset","setTargetChain","prevTargetChain","setAttestTx","setSignedVAAHex","setIsSending","setIsCreating","setCreateTx","reset","actions","receiveDataWrapper","data","isFetching","receivedAt","Date","toISOString","errorDataWrapper","isSourceAssetWormholeWrapped","sourceWalletAddress","sourceParsedTokenAccount","sourceParsedTokenAccounts","originChain","originAsset","originTokenId","targetAddressHex","targetAsset","transferTx","isRedeeming","redeemTx","isRecovery","nftSlice","setSourceWormholeWrappedInfo","isWrapped","assetAddress","tokenId","setSourceWalletAddress","setSourceParsedTokenAccount","setSourceParsedTokenAccounts","fetchSourceParsedTokenAccounts","errorSourceParsedTokenAccounts","receiveSourceParsedTokenAccounts","setTargetAddressHex","setTargetAsset","setTransferTx","setIsRedeeming","setRedeemTx","setRecoveryVaa","vaa","parsedPayload","targetAddress","originAddress","amount","targetParsedTokenAccount","isApproving","transferSlice","setAmount","setTargetParsedTokenAccount","setIsApproving","solanaTokenMap","terraTokenMap","marketsMap","tokenSlice","receiveSolanaTokenMap","fetchSolanaTokenMap","errorSolanaTokenMap","receiveTerraTokenMap","fetchTerraTokenMap","errorTerraTokenMap","receiveMarketsMap","fetchMarketsMap","errorMarketsMap","terraFeeDenom","feeSlice","setTerraFeeDenom","store","configureStore","reducer","attest","attestReducer","nft","nftReducer","transfer","transferReducer","tokens","tokenReducer","fee","feeReducer","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.10de6e36.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Header.e4315398.png\";","import { makeStyles, Link, Container, Typography} from \"@material-ui/core\";\nimport Header from \"./images/Header.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  headerImage: {\n    position: \"absolute\",\n    zIndex: -1,\n    top: 0,\n    background: `url(${Header})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"top -500px center\",\n    backgroundSize: \"2070px 1155px\",\n    width: \"100%\",\n    height: 1155,\n  },\n  centeredContainer: {\n    marginTop: theme.spacing(14),\n    marginBottom: theme.spacing(26),\n    minHeight: 208,\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.bg}>\n      <div className={classes.content}>\n        <div className={classes.headerImage} />\n           <Container maxWidth=\"md\">\n             <div className={classes.centeredContainer} style={{marginBottom: 30}}>\n              <Typography\n                variant=\"h2\"\n                component=\"h2\"\n              >\n                We're actively working to get Portal back up and running.\n              </Typography>\n          </div>\n          <div className={classes.centeredContainer} style={{marginTop: 0}}>\n\n            <Typography\n              variant=\"h2\"\n              component=\"h2\"\n            >\n              A fix has been deployed and all funds are safe.\n            </Typography>\n        </div>\n        </Container>\n\n        <Container maxWidth=\"lg\">\n          <div className={classes.centeredContainer} style={{marginBottom: 0}}>\n              <Typography\n                variant=\"h2\"\n                component=\"h2\"\n              >\n                Thank you for your support and trust.\n            </Typography>\n            </div>\n            <div className={classes.centeredContainer} style={{marginTop: 0}}>\n              <Typography\n                variant=\"h2\"\n                component=\"h2\"\n              >\n                For more updates, please follow us on&nbsp;\n                <Link\n                  href=\"https://twitter.com/wormholecrypto\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  color=\"inherit\"\n                  className={classes.link}\n                >twitter</Link>.\n              </Typography>\n          </div>\n        </Container>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { makeStyles } from \"@material-ui/core\";\n// import { useRouteMatch } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  holeOuterContainer: {\n    maxWidth: \"100%\",\n    width: \"100%\",\n    position: \"relative\",\n  },\n  holeInnerContainer: {\n    position: \"absolute\",\n    zIndex: -1,\n    left: \"50%\",\n    transform: \"translate(-50%, 0)\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  holeImage: {\n    width: \"max(1200px, 100vw)\",\n    maxWidth: \"1600px\",\n  },\n  blurred: {\n    filter: \"blur(2px)\",\n    opacity: \".9\",\n  },\n}));\n\nconst BackgroundImage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.holeOuterContainer}>\n      <div className={classes.holeInnerContainer}></div>\n    </div>\n  );\n};\n\nexport default BackgroundImage;\n","import React, { ReactChildren, useContext, useEffect, useState } from \"react\";\n\nconst BetaContext = React.createContext<boolean>(false);\n\nexport const BetaContextProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  const [isBetaEnabled, setIsBetaEnabled] = useState(false);\n\n  useEffect(() => {\n    let userEntered = [];\n    const secretSequence = [\n      \"38\",\n      \"38\",\n      \"40\",\n      \"40\",\n      \"37\",\n      \"39\",\n      \"37\",\n      \"39\",\n      \"66\",\n      \"65\",\n    ];\n    const secretListener = (event: KeyboardEvent) => {\n      const k = event.keyCode.toString();\n      if (k === secretSequence[userEntered.length]) {\n        userEntered.push(k);\n        if (userEntered.length === secretSequence.length) {\n          userEntered = [];\n          setIsBetaEnabled((prev) => !prev);\n        }\n      } else {\n        userEntered = [];\n      }\n    };\n    window.addEventListener(\"keydown\", secretListener);\n    return () => {\n      window.removeEventListener(\"keydown\", secretListener);\n    };\n  }, []);\n\n  return (\n    <BetaContext.Provider value={isBetaEnabled}>\n      {children}\n    </BetaContext.Provider>\n  );\n};\n\nexport const useBetaContext = () => {\n  return useContext(BetaContext);\n};\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport { BigNumber, ethers } from \"ethers\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport type Provider = ethers.providers.Web3Provider | undefined;\nexport type Signer = ethers.Signer | undefined;\n\ninterface IEthereumProviderContext {\n  connect(): void;\n  disconnect(): void;\n  provider: Provider;\n  chainId: number | undefined;\n  signer: Signer;\n  signerAddress: string | undefined;\n  providerError: string | null;\n}\n\nconst EthereumProviderContext = React.createContext<IEthereumProviderContext>({\n  connect: () => {},\n  disconnect: () => {},\n  provider: undefined,\n  chainId: undefined,\n  signer: undefined,\n  signerAddress: undefined,\n  providerError: null,\n});\nexport const EthereumProviderProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  const [providerError, setProviderError] = useState<string | null>(null);\n  const [provider, setProvider] = useState<Provider>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [signer, setSigner] = useState<Signer>(undefined);\n  const [signerAddress, setSignerAddress] = useState<string | undefined>(\n    undefined\n  );\n  const connect = useCallback(() => {\n    setProviderError(null);\n    detectEthereumProvider()\n      .then((detectedProvider) => {\n        if (detectedProvider) {\n          const provider = new ethers.providers.Web3Provider(\n            // @ts-ignore\n            detectedProvider,\n            \"any\"\n          );\n          provider\n            .send(\"eth_requestAccounts\", [])\n            .then(() => {\n              setProviderError(null);\n              setProvider(provider);\n              provider\n                .getNetwork()\n                .then((network) => {\n                  setChainId(network.chainId);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the network\"\n                  );\n                });\n              const signer = provider.getSigner();\n              setSigner(signer);\n              signer\n                .getAddress()\n                .then((address) => {\n                  setSignerAddress(address);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the signer address\"\n                  );\n                });\n              // TODO: try using ethers directly\n              // @ts-ignore\n              if (detectedProvider && detectedProvider.on) {\n                // @ts-ignore\n                detectedProvider.on(\"chainChanged\", (chainId) => {\n                  try {\n                    setChainId(BigNumber.from(chainId).toNumber());\n                  } catch (e) {}\n                });\n                // @ts-ignore\n                detectedProvider.on(\"accountsChanged\", (accounts) => {\n                  try {\n                    const signer = provider.getSigner();\n                    setSigner(signer);\n                    signer\n                      .getAddress()\n                      .then((address) => {\n                        setSignerAddress(address);\n                      })\n                      .catch(() => {\n                        setProviderError(\n                          \"An error occurred while getting the signer address\"\n                        );\n                      });\n                  } catch (e) {}\n                });\n              }\n            })\n            .catch(() => {\n              setProviderError(\n                \"An error occurred while requesting eth accounts\"\n              );\n            });\n        } else {\n          setProviderError(\"Please install MetaMask\");\n        }\n      })\n      .catch(() => {\n        setProviderError(\"Please install MetaMask\");\n      });\n  }, []);\n  const disconnect = useCallback(() => {\n    setProviderError(null);\n    setProvider(undefined);\n    setChainId(undefined);\n    setSigner(undefined);\n    setSignerAddress(undefined);\n  }, []);\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    }),\n    [\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    ]\n  );\n  return (\n    <EthereumProviderContext.Provider value={contextValue}>\n      {children}\n    </EthereumProviderContext.Provider>\n  );\n};\nexport const useEthereumProvider = () => {\n  return useContext(EthereumProviderContext);\n};\n","import { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { useWallet, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getMathWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport React, { FC, useMemo } from \"react\";\n\nexport const SolanaWalletProvider: FC = (props) => {\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n  // Only the wallets you want to instantiate here will be compiled into your application\n  const wallets = useMemo(() => {\n    return [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      // getTorusWallet({\n      //     options: { clientId: 'Go to https://developer.tor.us and create a client ID' }\n      // }),\n      // getLedgerWallet(),\n      // getSolongWallet(),\n      getMathWallet(),\n      getSolletWallet(),\n    ];\n  }, []);\n\n  return (\n    <WalletProvider wallets={wallets}>\n      <WalletDialogProvider>{props.children}</WalletDialogProvider>\n    </WalletProvider>\n  );\n};\n\nexport const useSolanaWallet = useWallet;\n","export default __webpack_public_path__ + \"static/media/avax.234db155.svg\";","export default __webpack_public_path__ + \"static/media/bsc.2e866e3f.svg\";","export default __webpack_public_path__ + \"static/media/eth.364436c5.svg\";","export default __webpack_public_path__ + \"static/media/oasis-network-rose-logo.c910dc42.svg\";","export default __webpack_public_path__ + \"static/media/polygon.97ff139c.svg\";","export default __webpack_public_path__ + \"static/media/solana.fa522d66.svg\";","export default __webpack_public_path__ + \"static/media/terra.4c802748.svg\";","import {\n  ChainId,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_BSC,\n  CHAIN_ID_ETH,\n  CHAIN_ID_ETHEREUM_ROPSTEN,\n  CHAIN_ID_POLYGON,\n  CHAIN_ID_SOLANA,\n  CHAIN_ID_TERRA,\n  CHAIN_ID_OASIS,\n  isEVMChain,\n} from \"@certusone/wormhole-sdk\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { getAddress } from \"ethers/lib/utils\";\nimport avaxIcon from \"../icons/avax.svg\";\nimport bscIcon from \"../icons/bsc.svg\";\nimport ethIcon from \"../icons/eth.svg\";\nimport oasisIcon from \"../icons/oasis-network-rose-logo.svg\";\nimport polygonIcon from \"../icons/polygon.svg\";\nimport solanaIcon from \"../icons/solana.svg\";\nimport terraIcon from \"../icons/terra.svg\";\n\nexport type Cluster = \"devnet\" | \"testnet\" | \"mainnet\";\nexport const CLUSTER: Cluster =\n  process.env.REACT_APP_CLUSTER === \"mainnet\"\n    ? \"mainnet\"\n    : process.env.REACT_APP_CLUSTER === \"testnet\"\n    ? \"testnet\"\n    : \"devnet\";\nexport interface ChainInfo {\n  id: ChainId;\n  name: string;\n  logo: string;\n}\nexport const CHAINS: ChainInfo[] =\n  CLUSTER === \"mainnet\"\n    ? [\n        {\n          id: CHAIN_ID_AVAX,\n          name: \"Avalanche\",\n          logo: avaxIcon,\n        },\n        {\n          id: CHAIN_ID_OASIS,\n          name: \"Oasis\",\n          logo: oasisIcon,\n        },\n        {\n          id: CHAIN_ID_BSC,\n          name: \"Binance Smart Chain\",\n          logo: bscIcon,\n        },\n        {\n          id: CHAIN_ID_ETH,\n          name: \"Ethereum\",\n          logo: ethIcon,\n        },\n        {\n          id: CHAIN_ID_POLYGON,\n          name: \"Polygon\",\n          logo: polygonIcon,\n        },\n        {\n          id: CHAIN_ID_SOLANA,\n          name: \"Solana\",\n          logo: solanaIcon,\n        },\n        {\n          id: CHAIN_ID_TERRA,\n          name: \"Terra\",\n          logo: terraIcon,\n        },\n      ]\n    : CLUSTER === \"testnet\"\n    ? [\n        {\n          id: CHAIN_ID_AVAX,\n          name: \"Avalanche\",\n          logo: avaxIcon,\n        },\n        {\n          id: CHAIN_ID_OASIS,\n          name: \"Oasis\",\n          logo: oasisIcon,\n        },\n        {\n          id: CHAIN_ID_BSC,\n          name: \"Binance Smart Chain\",\n          logo: bscIcon,\n        },\n        {\n          id: CHAIN_ID_ETH,\n          name: \"Ethereum (Goerli)\",\n          logo: ethIcon,\n        },\n        {\n          id: CHAIN_ID_ETHEREUM_ROPSTEN,\n          name: \"Ethereum (Ropsten)\",\n          logo: ethIcon,\n        },\n        {\n          id: CHAIN_ID_POLYGON,\n          name: \"Polygon\",\n          logo: polygonIcon,\n        },\n        {\n          id: CHAIN_ID_SOLANA,\n          name: \"Solana\",\n          logo: solanaIcon,\n        },\n        {\n          id: CHAIN_ID_TERRA,\n          name: \"Terra\",\n          logo: terraIcon,\n        },\n      ]\n    : [\n        {\n          id: CHAIN_ID_BSC,\n          name: \"Binance Smart Chain\",\n          logo: bscIcon,\n        },\n        {\n          id: CHAIN_ID_ETH,\n          name: \"Ethereum\",\n          logo: ethIcon,\n        },\n        {\n          id: CHAIN_ID_SOLANA,\n          name: \"Solana\",\n          logo: solanaIcon,\n        },\n        {\n          id: CHAIN_ID_TERRA,\n          name: \"Terra\",\n          logo: terraIcon,\n        },\n      ];\nexport const BETA_CHAINS: ChainId[] = CLUSTER === \"mainnet\" ? [] : [];\nexport const CHAINS_WITH_NFT_SUPPORT = CHAINS.filter(\n  ({ id }) =>\n    id === CHAIN_ID_AVAX ||\n    id === CHAIN_ID_BSC ||\n    id === CHAIN_ID_ETH ||\n    id === CHAIN_ID_ETHEREUM_ROPSTEN ||\n    id === CHAIN_ID_POLYGON ||\n    id === CHAIN_ID_OASIS ||\n    id === CHAIN_ID_SOLANA\n);\nexport type ChainsById = { [key in ChainId]: ChainInfo };\nexport const CHAINS_BY_ID: ChainsById = CHAINS.reduce((obj, chain) => {\n  obj[chain.id] = chain;\n  return obj;\n}, {} as ChainsById);\n\nexport const COMING_SOON_CHAINS: ChainInfo[] = [];\nexport const getDefaultNativeCurrencySymbol = (chainId: ChainId) =>\n  chainId === CHAIN_ID_SOLANA\n    ? \"SOL\"\n    : chainId === CHAIN_ID_ETH || chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? \"ETH\"\n    : chainId === CHAIN_ID_BSC\n    ? \"BNB\"\n    : chainId === CHAIN_ID_TERRA\n    ? \"LUNA\"\n    : chainId === CHAIN_ID_POLYGON\n    ? \"MATIC\"\n    : chainId === CHAIN_ID_AVAX\n    ? \"AVAX\"\n    : chainId === CHAIN_ID_OASIS\n    ? \"ROSE\"\n    : \"\";\nexport const getExplorerName = (chainId: ChainId) =>\n  chainId === CHAIN_ID_ETH || chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? \"Etherscan\"\n    : chainId === CHAIN_ID_BSC\n    ? \"BscScan\"\n    : chainId === CHAIN_ID_TERRA\n    ? \"Finder\"\n    : chainId === CHAIN_ID_POLYGON\n    ? \"Polygonscan\"\n    : chainId === CHAIN_ID_AVAX\n    ? \"Snowtrace\"\n    : \"Explorer\";\nexport const WORMHOLE_RPC_HOSTS =\n  CLUSTER === \"mainnet\"\n    ? [\n        \"https://wormhole-v2-mainnet-api.certus.one\",\n        \"https://wormhole.inotel.ro\",\n        \"https://wormhole-v2-mainnet-api.mcf.rocks\",\n        \"https://wormhole-v2-mainnet-api.chainlayer.network\",\n        \"https://wormhole-v2-mainnet-api.staking.fund\",\n        \"https://wormhole-v2-mainnet.01node.com\",\n      ]\n    : CLUSTER === \"testnet\"\n    ? [\"https://wormhole-v2-testnet-api.certus.one\"]\n    : [\"http://localhost:7071\"];\nexport const ETH_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 1 : CLUSTER === \"testnet\" ? 5 : 1337;\nexport const ROPSTEN_ETH_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 1 : CLUSTER === \"testnet\" ? 3 : 1337;\nexport const BSC_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 56 : CLUSTER === \"testnet\" ? 97 : 1397;\nexport const POLYGON_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 137 : CLUSTER === \"testnet\" ? 80001 : 1381;\nexport const AVAX_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 43114 : CLUSTER === \"testnet\" ? 43113 : 1381;\nexport const OASIS_NETWORK_CHAIN_ID =\n  CLUSTER === \"mainnet\" ? 42262 : CLUSTER === \"testnet\" ? 42261 : 1381;\nexport const getEvmChainId = (chainId: ChainId) =>\n  chainId === CHAIN_ID_ETH\n    ? ETH_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? ROPSTEN_ETH_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_BSC\n    ? BSC_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_POLYGON\n    ? POLYGON_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_AVAX\n    ? AVAX_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_OASIS\n    ? OASIS_NETWORK_CHAIN_ID\n    : undefined;\nexport const SOLANA_HOST = process.env.REACT_APP_SOLANA_API_URL\n  ? process.env.REACT_APP_SOLANA_API_URL\n  : CLUSTER === \"mainnet\"\n  ? clusterApiUrl(\"mainnet-beta\")\n  : CLUSTER === \"testnet\"\n  ? clusterApiUrl(\"devnet\")\n  : \"http://localhost:8899\";\n\nexport const TERRA_HOST =\n  CLUSTER === \"mainnet\"\n    ? {\n        URL: \"https://lcd.terra.dev\",\n        chainID: \"columbus-5\",\n        name: \"mainnet\",\n      }\n    : CLUSTER === \"testnet\"\n    ? {\n        URL: \"https://bombay-lcd.terra.dev\",\n        chainID: \"bombay-12\",\n        name: \"testnet\",\n      }\n    : {\n        URL: \"http://localhost:1317\",\n        chainID: \"columbus-5\",\n        name: \"localterra\",\n      };\nexport const ETH_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B\"\n    : CLUSTER === \"testnet\"\n    ? \"0x706abc4E45D419950511e474C7B9Ed348A4a716c\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const ETH_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE\"\n    : CLUSTER === \"testnet\"\n    ? \"0xD8E4C2DbDd2e2bd8F1336EA691dBFF6952B1a6eB\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const ETH_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x3ee18B2214AFF97000D974cf647E7C347E8fa585\"\n    : CLUSTER === \"testnet\"\n    ? \"0xF890982f9310df57d00f659cf4fd87e65adEd8d7\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\nexport const BSC_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B\"\n    : CLUSTER === \"testnet\"\n    ? \"0x68605AD7b15c732a30b1BbC62BE8F2A509D74b4D\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const BSC_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x5a58505a96D1dbf8dF91cB21B54419FC36e93fdE\"\n    : CLUSTER === \"testnet\"\n    ? \"0xcD16E5613EF35599dc82B24Cb45B5A93D779f1EE\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const BSC_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0xB6F6D86a8f9879A9c87f643768d9efc38c1Da6E7\"\n    : CLUSTER === \"testnet\"\n    ? \"0x9dcF9D205C9De35334D646BeE44b2D2859712A09\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\nexport const POLYGON_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x7A4B5a56256163F07b2C80A7cA55aBE66c4ec4d7\"\n    : CLUSTER === \"testnet\"\n    ? \"0x0CBE91CF822c73C2315FB05100C2F714765d5c20\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const POLYGON_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x90BBd86a6Fe93D3bc3ed6335935447E75fAb7fCf\"\n    : CLUSTER === \"testnet\"\n    ? \"0x51a02d0dcb5e52F5b92bdAA38FA013C91c7309A9\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const POLYGON_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x5a58505a96D1dbf8dF91cB21B54419FC36e93fdE\"\n    : CLUSTER === \"testnet\"\n    ? \"0x377D55a7928c046E18eEbb61977e714d2a76472a\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\nexport const AVAX_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x54a8e5f9c4CbA08F9943965859F6c34eAF03E26c\"\n    : CLUSTER === \"testnet\"\n    ? \"0x7bbcE28e64B3F8b84d876Ab298393c38ad7aac4C\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const AVAX_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0xf7B6737Ca9c4e08aE573F75A97B73D7a813f5De5\"\n    : CLUSTER === \"testnet\"\n    ? \"0xD601BAf2EEE3C028344471684F6b27E789D9075D\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const AVAX_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x0e082F06FF657D94310cB8cE8B0D9a04541d8052\"\n    : CLUSTER === \"testnet\"\n    ? \"0x61E44E506Ca5659E6c0bba9b678586fA2d729756\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\nexport const OASIS_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0xfE8cD454b4A1CA468B57D79c0cc77Ef5B6f64585\"\n    : CLUSTER === \"testnet\"\n    ? \"0xc1C338397ffA53a2Eb12A7038b4eeb34791F8aCb\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const OASIS_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x04952D522Ff217f40B5Ef3cbF659EcA7b952a6c1\"\n    : CLUSTER === \"testnet\"\n    ? \"0xC5c25B41AB0b797571620F5204Afa116A44c0ebA\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const OASIS_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x5848C791e09901b40A9Ef749f2a6735b418d7564\"\n    : CLUSTER === \"testnet\"\n    ? \"0x88d8004A9BdbfD9D28090A02010C19897a29605c\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\nexport const SOL_BRIDGE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth\"\n    : CLUSTER === \"testnet\"\n    ? \"3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5\"\n    : \"Bridge1p5gheXUvJ6jGWGeCsgPKgnE3YgdGKRVCMY9o\";\nexport const SOL_NFT_BRIDGE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"WnFt12ZrnzZrFZkt2xsNsaNWoQribnuQ5B5FrDbwDhD\"\n    : CLUSTER === \"testnet\"\n    ? \"2rHhojZ7hpu1zA91nvZmT8TqWWvMcKmmNBCr2mKTtMq4\"\n    : \"NFTWqJR8YnRVqPDvTJrYuLrQDitTG5AScqbeghi4zSA\";\nexport const SOL_TOKEN_BRIDGE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"wormDTUJ6AWPNvk59vGQbDvGJmqbDTdgWgAqcLBCgUb\"\n    : CLUSTER === \"testnet\"\n    ? \"DZnkkTmCiFWfYTfT41X3Rd1kDgozqzxWaHqsw6W4x2oe\"\n    : \"B6RHG3mfcckmrYN1UhmJzyS1XX3fZKbkeUcpJe9Sy3FE\";\nexport const ROPSTEN_ETH_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B\"\n    : CLUSTER === \"testnet\"\n    ? \"0x210c5F5e2AF958B4defFe715Dc621b7a3BA888c5\"\n    : \"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550\"\n);\nexport const ROPSTEN_ETH_NFT_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE\"\n    : CLUSTER === \"testnet\"\n    ? \"0x2b048Da40f69c8dc386a56705915f8E966fe1eba\"\n    : \"0x26b4afb60d6c903165150c6f0aa14f8016be4aec\"\n);\nexport const ROPSTEN_ETH_TOKEN_BRIDGE_ADDRESS = getAddress(\n  CLUSTER === \"mainnet\"\n    ? \"0x3ee18B2214AFF97000D974cf647E7C347E8fa585\"\n    : CLUSTER === \"testnet\"\n    ? \"0xF174F9A837536C449321df1Ca093Bb96948D5386\"\n    : \"0x0290FB167208Af455bB137780163b7B7a9a10C16\"\n);\n\nexport const SOL_CUSTODY_ADDRESS =\n  \"GugU1tP7doLeTw9hQP51xRJyS8Da1fWxuiy2rVrnMD2m\";\nexport const SOL_NFT_CUSTODY_ADDRESS =\n  \"D63bhHo634eXSj4Jq3xgu2fjB5XKc8DFHzDY9iZk7fv1\";\nexport const TERRA_TEST_TOKEN_ADDRESS =\n  \"terra13nkgqrfymug724h8pprpexqj9h629sa3ncw7sh\";\nexport const TERRA_BRIDGE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"terra1dq03ugtd40zu9hcgdzrsq6z2z4hwhc9tqk2uy5\"\n    : CLUSTER === \"testnet\"\n    ? \"terra1pd65m0q9tl3v8znnz5f5ltsfegyzah7g42cx5v\"\n    : \"terra18vd8fpwxzck93qlwghaj6arh4p7c5n896xzem5\";\nexport const TERRA_TOKEN_BRIDGE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"terra10nmmwe8r3g99a9newtqa7a75xfgs2e8z87r2sf\"\n    : CLUSTER === \"testnet\"\n    ? \"terra1pseddrv0yfsn76u4zxrjmtf45kdlmalswdv39a\"\n    : \"terra10pyejy66429refv3g35g2t7am0was7ya7kz2a4\";\n\nexport const getBridgeAddressForChain = (chainId: ChainId) =>\n  chainId === CHAIN_ID_SOLANA\n    ? SOL_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETH\n    ? ETH_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_BSC\n    ? BSC_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_TERRA\n    ? TERRA_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_POLYGON\n    ? POLYGON_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? ROPSTEN_ETH_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_AVAX\n    ? AVAX_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_OASIS\n    ? OASIS_BRIDGE_ADDRESS\n    : \"\";\nexport const getNFTBridgeAddressForChain = (chainId: ChainId) =>\n  chainId === CHAIN_ID_SOLANA\n    ? SOL_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETH\n    ? ETH_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_BSC\n    ? BSC_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_POLYGON\n    ? POLYGON_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? ROPSTEN_ETH_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_AVAX\n    ? AVAX_NFT_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_OASIS\n    ? OASIS_NFT_BRIDGE_ADDRESS\n    : \"\";\nexport const getTokenBridgeAddressForChain = (chainId: ChainId) =>\n  chainId === CHAIN_ID_SOLANA\n    ? SOL_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETH\n    ? ETH_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_BSC\n    ? BSC_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_TERRA\n    ? TERRA_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_POLYGON\n    ? POLYGON_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n    ? ROPSTEN_ETH_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_AVAX\n    ? AVAX_TOKEN_BRIDGE_ADDRESS\n    : chainId === CHAIN_ID_OASIS\n    ? OASIS_TOKEN_BRIDGE_ADDRESS\n    : \"\";\n\nexport const COVALENT_API_KEY = process.env.REACT_APP_COVALENT_API_KEY\n  ? process.env.REACT_APP_COVALENT_API_KEY\n  : \"\";\n\nexport const COVALENT_ETHEREUM = 1; // Covalent only supports mainnet and Kovan\nexport const COVALENT_BSC = CLUSTER === \"devnet\" ? 56 : BSC_NETWORK_CHAIN_ID;\nexport const COVALENT_POLYGON =\n  CLUSTER === \"devnet\" ? 137 : POLYGON_NETWORK_CHAIN_ID;\nexport const COVALENT_AVAX = CLUSTER === \"devnet\" ? 137 : AVAX_NETWORK_CHAIN_ID;\nexport const COVALENT_OASIS = CLUSTER === \"devnet\" ? null : null;\nexport const COVALENT_GET_TOKENS_URL = (\n  chainId: ChainId,\n  walletAddress: string,\n  nft?: boolean,\n  noNftMetadata?: boolean\n) => {\n  const chainNum =\n    chainId === CHAIN_ID_ETH || chainId === CHAIN_ID_ETHEREUM_ROPSTEN\n      ? COVALENT_ETHEREUM\n      : chainId === CHAIN_ID_BSC\n      ? COVALENT_BSC\n      : chainId === CHAIN_ID_POLYGON\n      ? COVALENT_POLYGON\n      : chainId === CHAIN_ID_AVAX\n      ? COVALENT_AVAX\n      : chainId === CHAIN_ID_OASIS\n      ? COVALENT_OASIS\n      : \"\";\n  // https://www.covalenthq.com/docs/api/#get-/v1/{chain_id}/address/{address}/balances_v2/\n  return `https://api.covalenthq.com/v1/${chainNum}/address/${walletAddress}/balances_v2/?key=${COVALENT_API_KEY}${\n    nft ? \"&nft=true\" : \"\"\n  }${noNftMetadata ? \"&no-nft-fetch=true\" : \"\"}`;\n};\nexport const TERRA_SWAPRATE_URL =\n  \"https://fcd.terra.dev/v1/market/swaprate/uusd\";\n\nexport const WETH_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n    : CLUSTER === \"testnet\"\n    ? \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const WETH_DECIMALS = 18;\n\nexport const WBNB_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n    : CLUSTER === \"testnet\"\n    ? \"0xae13d989dac2f0debff460ac112a837c89baa7cd\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const WBNB_DECIMALS = 18;\n\nexport const WMATIC_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\"\n    : CLUSTER === \"testnet\"\n    ? \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const WMATIC_DECIMALS = 18;\n\nexport const ROPSTEN_WETH_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n    : CLUSTER === \"testnet\"\n    ? \"0xc778417e063141139fce010982780140aa0cd5ab\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const ROPSTEN_WETH_DECIMALS = 18;\n\nexport const WAVAX_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7\"\n    : CLUSTER === \"testnet\"\n    ? \"0xd00ae08403b9bbb9124bb305c09058e32c39a48c\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const WAVAX_DECIMALS = 18;\n\nexport const WROSE_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0x21C718C22D52d0F3a789b752D4c2fD5908a8A733\"\n    : CLUSTER === \"testnet\"\n    ? \"0x792296e2a15e6Ceb5f5039DecaE7A1f25b00B0B0\"\n    : \"0xDDb64fE46a91D46ee29420539FC25FD07c5FEa3E\";\nexport const WROSE_DECIMALS = 18;\n\nexport const WORMHOLE_V1_ETH_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"0xf92cD566Ea4864356C5491c177A430C222d7e678\"\n    : CLUSTER === \"testnet\"\n    ? \"0xdae0Cba01eFc4bfEc1F7Fece73Fe8b8d2Eda65B0\"\n    : \"0xf92cD566Ea4864356C5491c177A430C222d7e678\"; //TODO something that doesn't explode in localhost\nexport const WORMHOLE_V1_SOLANA_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"WormT3McKhFJ2RkiGpdw9GKvNCrB2aB54gb2uV9MfQC\"\n    : CLUSTER === \"testnet\"\n    ? \"BrdgiFmZN3BKkcY3danbPYyxPKwb8RhQzpM2VY5L97ED\"\n    : \"\";\n\nexport const TERRA_TOKEN_METADATA_URL =\n  \"https://assets.terra.money/cw20/tokens.json\";\n\nexport const WORMHOLE_V1_MINT_AUTHORITY =\n  CLUSTER === \"mainnet\"\n    ? \"9zyPU1mjgzaVyQsYwKJJ7AhVz5bgx5uc1NPABvAcUXsT\"\n    : CLUSTER === \"testnet\"\n    ? \"BJa7dq3bRP216zaTdw4cdcV71WkPc1HXvmnGeFVDi5DC\"\n    : \"\";\n\n// hardcoded addresses for warnings\nexport const SOLANA_TOKENS_THAT_EXIST_ELSEWHERE = [\n  \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\", //  SRM\n  \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\", // USDC\n  \"kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6\", //  KIN\n  \"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5\", // renBTC\n  \"8wv2KAykQstNAj2oW6AHANGBiFKVFhvMiyyzzjhkmGvE\", // renLUNA\n  \"G1a6jxYz3m8DVyMqYnuV7s86wD4fvuXYneWSpLJkmsXj\", // renBCH\n  \"FKJvvVJ242tX7zFtzTmzqoA631LqHh4CdgcN8dcfFSju\", // renDGB\n  \"ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU\", // renDOGE\n  \"E99CQ2gFMmbiyK2bwiaFNWUUmwz4r8k2CVEFxwuvQ7ue\", // renZEC\n  \"De2bU64vsXKU9jq4bCjeDxNRGPn8nr3euaTK8jBYmD3J\", // renFIL\n  \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\", // USDT\n];\nexport const ETH_TOKENS_THAT_EXIST_ELSEWHERE = [\n  getAddress(\"0x476c5E26a75bd202a9683ffD34359C0CC15be0fF\"), // SRM\n  getAddress(\"0x818fc6c2ec5986bc6e2cbf00939d90556ab12ce5\"), // KIN\n  getAddress(\"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d\"), // renBTC\n  getAddress(\"0x52d87F22192131636F93c5AB18d0127Ea52CB641\"), // renLUNA\n  getAddress(\"0x459086f2376525bdceba5bdda135e4e9d3fef5bf\"), // renBCH\n  getAddress(\"0xe3cb486f3f5c639e98ccbaf57d95369375687f80\"), // renDGB\n  getAddress(\"0x3832d2F059E55934220881F831bE501D180671A7\"), // renDOGE\n  getAddress(\"0x1c5db575e2ff833e46a2e9864c22f4b22e0b37c2\"), // renZEC\n  getAddress(\"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5\"), // renFIL\n];\nexport const ETH_TOKENS_THAT_CAN_BE_SWAPPED_ON_SOLANA = [\n  getAddress(\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"), // USDC\n  getAddress(\"0xdac17f958d2ee523a2206206994597c13d831ec7\"), // USDT\n];\nexport const BSC_MARKET_WARNINGS = [\n  getAddress(WBNB_ADDRESS),\n  getAddress(\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"), // BUSD\n  getAddress(\"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"), // USDC\n  getAddress(\"0x55d398326f99059ff775485246999027b3197955\"), // BSC-USD\n];\n\nexport const MIGRATION_PROGRAM_ADDRESS =\n  CLUSTER === \"mainnet\"\n    ? \"whmRZnmyxdr2TkHXcZoFdtvNYRLQ5Jtbkf6ZbGkJjdk\"\n    : CLUSTER === \"testnet\"\n    ? \"\"\n    : \"Ex9bCdVMSfx7EzB3pgSi2R4UHwJAXvTw18rBQm5YQ8gK\";\n\nexport const MIGRATION_ASSET_MAP = new Map<string, string>(\n  CLUSTER === \"mainnet\"\n    ? [\n        [\n          // HUSD\n          \"BybpSTBoZHsmKnfxYG47GDhVPKrnEKX31CScShbrzUhX\",\n          \"7VQo3HFLNH5QqGtM8eC3XQbPkJUu7nS9LeGWjerRh5Sw\",\n        ],\n        [\n          // BUSD\n          \"AJ1W9A9N9dEMdVyoDiam2rV44gnBm2csrPDP7xqcapgX\",\n          \"33fsBLA8djQm82RpHmE3SuVrPGtZBWNYExsEUeKX1HXX\",\n        ],\n        [\n          // HBTC\n          \"8pBc4v9GAwCBNWPB5XKA93APexMGAS4qMr37vNke9Ref\",\n          \"7dVH61ChzgmN9BwG4PkzwRP8PbYwPJ7ZPNF2vamKT2H8\",\n        ],\n        [\n          // DAI\n          \"FYpdBuyAHSbdaAyD1sKkxyLWbAP8uUW9h6uvdhK74ij1\",\n          \"EjmyN6qEC1Tf1JxiG1ae7UTJhUxSwk1TCWNWqxWV4J6o\",\n        ],\n        [\n          // FRAX\n          \"8L8pDf3jutdpdr4m3np68CL9ZroLActrqwxi6s9Ah5xU\",\n          \"FR87nWEUxVgerFGhZM8Y4AggKGLnaXswr1Pd8wZ4kZcp\",\n        ],\n        [\n          // USDK\n          \"2kycGCD8tJbrjJJqWN2Qz5ysN9iB4Bth3Uic4mSB7uak\",\n          \"43m2ewFV5nDepieFjT9EmAQnc1HRtAF247RBpLGFem5F\",\n        ],\n        // [\n        //   // UST\n        //   \"CXLBjMMcwkc17GfJtBos6rQCo1ypeH6eDbB82Kby4MRm\",\n        //   \"5Un6AdG9GBjxVhTSvvt2x6X6vtN1zrDxkkDpDcShnHfF\",\n        // ],\n        [\n          // UST\n          \"CXLBjMMcwkc17GfJtBos6rQCo1ypeH6eDbB82Kby4MRm\",\n          \"9vMJfxuKxXBoEa7rM12mYLMwTacLMLDJqHozw96WQL8i\",\n        ],\n        // [\n        //   // Wrapped LUNA\n        //   \"2Xf2yAXJfg82sWwdLUo2x9mZXy6JCdszdMZkcF1Hf4KV\",\n        //   \"EQTV1LW23Mgtjb5LXSg9NGw1J32oqTV4HCPmHCVSGmqD\",\n        // ],\n        [\n          // Wrapped LUNA\n          \"2Xf2yAXJfg82sWwdLUo2x9mZXy6JCdszdMZkcF1Hf4KV\",\n          \"F6v4wfAdJB8D8p77bMXZgYt8TDKsYxLYxH5AFhUkYx9W\",\n        ],\n        [\n          // FTT\n          \"GbBWwtYTMPis4VHb8MrBbdibPhn28TSrLB53KvUmb7Gi\",\n          \"EzfgjvkSwthhgHaceR3LnKXUoRkP6NUhfghdaHAj1tUv\",\n        ],\n        [\n          // SRM\n          \"2jXy799YnEcRXneFo2GEAB6SDRsAa767HpWmktRr1DaP\",\n          \"xnorPhAzWXUczCP3KjU5yDxmKKZi5cSbxytQ1LgE3kG\",\n        ],\n        [\n          // FTT (Sollet)\n          \"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3\",\n          \"EzfgjvkSwthhgHaceR3LnKXUoRkP6NUhfghdaHAj1tUv\",\n        ],\n        [\n          // WETH (Sollet)\n          \"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk\",\n          \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n        ],\n        [\n          // UNI (Sollet)\n          \"DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw\",\n          \"8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36\",\n        ],\n        [\n          // HXRO (Sollet)\n          \"DJafV9qemGp7mLMEn5wrfqaFwxsbLgUsGVS16zKRk9kc\",\n          \"HxhWkVpk5NS4Ltg5nij2G671CKXFRKPK8vy271Ub4uEK\",\n        ],\n        [\n          // ALEPH (Sollet)\n          \"CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K\",\n          \"3UCMiSnkcnkPE1pgQ5ggPCBv6dXgVUy16TmMUe1WpG9x\",\n        ],\n        [\n          // TOMOE (Sollet)\n          \"GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd\",\n          \"46AiRdka3HYGkhV6r9gyS6Teo9cojfGXfK8oniALYMZx\",\n        ],\n      ]\n    : CLUSTER === \"testnet\"\n    ? [\n        [\n          \"orcarKHSqC5CDDsGbho8GKvwExejWHxTqGzXgcewB9L\", //This is not actually a v1 asset\n          \"orcarKHSqC5CDDsGbho8GKvwExejWHxTqGzXgcewB9L\",\n        ],\n      ]\n    : [\n        // [\n        //   \"2WDq7wSs9zYrpx2kbHDA4RUTRch2CCTP6ZWaH4GNfnQQ\",\n        //   \"GcdupcwxkmVGM6s9F8bHSjNoznXAb3hRJTioABNYkn31\",\n        // ],\n      ]\n);\n\nexport const ETH_MIGRATION_ASSET_MAP = new Map<string, string>(\n  CLUSTER === \"mainnet\"\n    ? [\n        [\n          // LUNA\n          getAddress(\"0xd2877702675e6cEb975b4A1dFf9fb7BAF4C91ea9\"),\n          getAddress(\"0xe76820F1DB773B1d62a3D22F47259705cC5fA4E6\"),\n        ],\n        [\n          // UST\n          getAddress(\"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD\"),\n          getAddress(\"0xF39C29d8f6851d87c40c83b61078EB7384f7Cb51\"),\n        ],\n      ]\n    : CLUSTER === \"testnet\"\n    ? []\n    : [\n        // [\n        //   \"0x2D8BE6BF0baA74e0A907016679CaE9190e80dD0A\",\n        //   \"0xFcCeD5E997E7fb1D0594518D3eD57245bB8ed17E\",\n        // ],\n      ]\n);\n\nexport const BSC_MIGRATION_ASSET_MAP = new Map<string, string>(\n  CLUSTER === \"mainnet\"\n    ? [\n        [\n          // LUNA\n          getAddress(\"0xECCF35F941Ab67FfcAA9A1265C2fF88865caA005\"),\n          getAddress(\"0x355A116ef1Cf566B12Ef3a8e409A64e303c53740\"),\n        ],\n        [\n          // UST\n          getAddress(\"0x23396cF899Ca06c4472205fC903bDB4de249D6fC\"),\n          getAddress(\"0x0F98AB919D04a291838B3b075c57181057D4CF75\"),\n        ],\n        [\n          // ORION\n          getAddress(\"0x5530ec23f4ee1521182bd158c09f4ca7efec1ef0\"),\n          getAddress(\"0x084fa354e65b521e6fb9d1602549cf8693cdb4f8\"),\n        ],\n      ]\n    : CLUSTER === \"testnet\"\n    ? []\n    : [\n        // [\n        //   \"0x2D8BE6BF0baA74e0A907016679CaE9190e80dD0A\",\n        //   \"0xFcCeD5E997E7fb1D0594518D3eD57245bB8ed17E\",\n        // ],\n      ]\n);\n\nexport const getMigrationAssetMap = (chainId: ChainId) => {\n  if (chainId === CHAIN_ID_BSC) {\n    return BSC_MIGRATION_ASSET_MAP;\n  } else if (chainId === CHAIN_ID_ETH) {\n    return ETH_MIGRATION_ASSET_MAP;\n  } else if (chainId === CHAIN_ID_SOLANA) {\n    return MIGRATION_ASSET_MAP;\n  } else {\n    return new Map<string, string>();\n  }\n};\n\nexport const SUPPORTED_TERRA_TOKENS = [\"uluna\", \"uusd\"];\nexport const TERRA_DEFAULT_FEE_DENOM = SUPPORTED_TERRA_TOKENS[0];\n\nexport const TERRA_FCD_BASE =\n  CLUSTER === \"mainnet\"\n    ? \"https://fcd.terra.dev\"\n    : CLUSTER === \"testnet\"\n    ? \"https://bombay-fcd.terra.dev\"\n    : \"http://localhost:3060\";\nexport const TERRA_GAS_PRICES_URL = `${TERRA_FCD_BASE}/v1/txs/gas_prices`;\n\nexport const TOTAL_TRANSACTIONS_WORMHOLE = `https://europe-west3-wormhole-315720.cloudfunctions.net/mainnet-totals?groupBy=address`;\n\nexport const RECENT_TRANSACTIONS_WORMHOLE = `https://europe-west3-wormhole-315720.cloudfunctions.net/mainnet-recent?groupBy=address&numRows=2`;\n\nexport const VAA_EMITTER_ADDRESSES = [\n  `${CHAIN_ID_SOLANA}:ec7372995d5cc8732397fb0ad35c0121e0eaa90d26f828a534cab54391b3a4f5`, //SOLANA TOKEN\n  `${CHAIN_ID_SOLANA}:0def15a24423e1edd1a5ab16f557b9060303ddbab8c803d2ee48f4b78a1cfd6b`, //SOLAN NFT\n  `${CHAIN_ID_ETH}:0000000000000000000000003ee18b2214aff97000d974cf647e7c347e8fa585`, //ETH token\n  `${CHAIN_ID_ETH}:0000000000000000000000006ffd7ede62328b3af38fcd61461bbfc52f5651fe`, //ETH NFT\n  `${CHAIN_ID_TERRA}:0000000000000000000000007cf7b764e38a0a5e967972c1df77d432510564e2`, //terra\n  `${CHAIN_ID_BSC}:000000000000000000000000b6f6d86a8f9879a9c87f643768d9efc38c1da6e7`, //bsc\n  `${CHAIN_ID_BSC}:0000000000000000000000005a58505a96d1dbf8df91cb21b54419fc36e93fde`, //bsc nft\n  `${CHAIN_ID_POLYGON}:0000000000000000000000005a58505a96d1dbf8df91cb21b54419fc36e93fde`, //Polygon\n  `${CHAIN_ID_POLYGON}:00000000000000000000000090bbd86a6fe93d3bc3ed6335935447e75fab7fcf`, //Polygon nft\n];\n\nexport const WORMHOLE_EXPLORER_BASE = \"https://wormholenetwork.com/en/explorer\";\n\nexport type MultiChainInfo = {\n  [key in ChainId]: { [address: string]: string };\n};\nexport const MULTI_CHAIN_TOKENS: MultiChainInfo =\n  //EVM chains should format the addresses to all lowercase\n  CLUSTER === \"mainnet\"\n    ? ({\n        [CHAIN_ID_SOLANA]: {\n          EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v: \"USDC\",\n          Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB: \"USDT\",\n        },\n        [CHAIN_ID_ETH]: {\n          \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\": \"USDC\",\n          \"0xdac17f958d2ee523a2206206994597c13d831ec7\": \"USDT\",\n        },\n        [CHAIN_ID_TERRA]: {},\n        [CHAIN_ID_BSC]: {\n          \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\": \"USDC\",\n          \"0x55d398326f99059ff775485246999027b3197955\": \"USDT\",\n        },\n        [CHAIN_ID_POLYGON]: {\n          \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\": \"USDC\",\n          \"0xc2132d05d31c914a87c6611c10748aeb04b58e8f\": \"USDT\",\n        },\n      } as MultiChainInfo)\n    : ({\n        [CHAIN_ID_SOLANA]: {\n          \"2WDq7wSs9zYrpx2kbHDA4RUTRch2CCTP6ZWaH4GNfnQQ\": \"SOLT\",\n        },\n        [CHAIN_ID_ETH]: {},\n        [CHAIN_ID_TERRA]: {},\n        [CHAIN_ID_BSC]: {},\n        [CHAIN_ID_POLYGON]: {},\n      } as MultiChainInfo);\n\nexport const AVAILABLE_MARKETS_URL =\n  \"https://docs.wormholenetwork.com/wormhole/overview-liquid-markets\";\n\nexport const SOLANA_SYSTEM_PROGRAM_ADDRESS = \"11111111111111111111111111111111\";\nexport const FEATURED_MARKETS_JSON_URL =\n  \"https://raw.githubusercontent.com/certusone/wormhole-token-list/main/src/markets.json\";\n\nexport const logoOverrides = new Map<string, string>([\n  [\n    \"0x727f064a78dc734d33eec18d5370aef32ffd46e4\",\n    \"https://orion.money/assets/ORION-LOGO-2.1-GREEN@256x256.png\",\n  ],\n]);\n\nexport const getHowToAddTokensToWalletUrl = (chainId: ChainId) => {\n  if (isEVMChain(chainId)) {\n    return \"https://docs.wormholenetwork.com/wormhole/video-tutorial-how-to-manually-add-tokens-to-your-wallet#1.-metamask-ethereum-polygon-and-bsc\";\n  } else if (chainId === CHAIN_ID_TERRA) {\n    return \"https://docs.wormholenetwork.com/wormhole/video-tutorial-how-to-manually-add-tokens-to-your-wallet#2.-terra-station\";\n  }\n  return \"\";\n};\n\nexport const getHowToAddToTokenListUrl = (chainId: ChainId) => {\n  if (chainId === CHAIN_ID_SOLANA) {\n    return \"https://github.com/solana-labs/token-list\";\n  } else if (chainId === CHAIN_ID_TERRA) {\n    return \"https://github.com/terra-money/assets\";\n  }\n  return \"\";\n};\n\nexport const SOLANA_TOKEN_METADATA_PROGRAM_URL =\n  \"https://github.com/metaplex-foundation/metaplex/tree/master/rust/token-metadata/program\";\nexport const MAX_VAA_UPLOAD_RETRIES_SOLANA = 5;\n\nexport const POLYGON_TERRA_WRAPPED_TOKENS = [\n  \"0x692597b009d13c4049a947cab2239b7d6517875f\", // Wrapped UST Token\n  \"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57\", // Wrapped LUNA Token\n];\n\nexport const JUPITER_SWAP_BASE_URL = \"https://jup.ag/swap\";\n","import {\n  NetworkInfo,\n  Wallet,\n  WalletProvider,\n  useWallet,\n} from \"@terra-money/wallet-provider\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\nimport { TERRA_HOST } from \"../utils/consts\";\n\nconst mainnet = {\n  name: \"mainnet\",\n  chainID: \"columbus-4\",\n  lcd: \"https://lcd.terra.dev\",\n};\n\nconst localnet = {\n  name: \"localnet\",\n  chainID: \"localnet\",\n  lcd: TERRA_HOST.URL,\n};\n\nconst walletConnectChainIds: Record<number, NetworkInfo> = {\n  0: localnet,\n  1: mainnet,\n};\n\ninterface ITerraWalletContext {\n  connect(): void;\n  disconnect(): void;\n  connected: boolean;\n  wallet: any;\n}\n\nconst TerraWalletContext = React.createContext<ITerraWalletContext>({\n  connect: () => {},\n  disconnect: () => {},\n  connected: false,\n  wallet: null,\n});\n\nexport const TerraWalletWrapper = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  // TODO: Use wallet instead of useConnectedWallet.\n  const terraWallet = useWallet();\n  const [, setWallet] = useState<Wallet | undefined>(undefined);\n  const [connected, setConnected] = useState(false);\n\n  const connect = useCallback(() => {\n    const CHROME_EXTENSION = 1;\n    if (terraWallet) {\n      terraWallet.connect(terraWallet.availableConnectTypes[CHROME_EXTENSION]);\n      setWallet(terraWallet);\n      setConnected(true);\n    }\n  }, [terraWallet]);\n\n  const disconnect = useCallback(() => {\n    setConnected(false);\n    setWallet(undefined);\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      connected,\n      wallet: terraWallet,\n    }),\n    [connect, disconnect, connected, terraWallet]\n  );\n\n  return (\n    <TerraWalletContext.Provider value={contextValue}>\n      {children}\n    </TerraWalletContext.Provider>\n  );\n};\n\nexport const TerraWalletProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  return (\n    <WalletProvider\n      defaultNetwork={localnet}\n      walletConnectChainIds={walletConnectChainIds}\n    >\n      <TerraWalletWrapper>{children}</TerraWalletWrapper>\n    </WalletProvider>\n  );\n};\n\nexport const useTerraWallet = () => {\n  return useContext(TerraWalletContext);\n};\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Typography variant=\"h5\" style={{ textAlign: \"center\", marginTop: 24 }}>\n          An unexpected error has occurred. Please refresh the page.\n        </Typography>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { createTheme, responsiveFontSizes } from \"@material-ui/core\";\n\nexport const COLORS = {\n  blue: \"#1975e6\",\n  blueWithTransparency: \"rgba(25, 117, 230, 0.8)\",\n  gray: \"#4e4e54\",\n  green: \"#0ac2af\",\n  greenWithTransparency: \"rgba(10, 194, 175, 0.8)\",\n  lightGreen: \"rgba(51, 242, 223, 1)\",\n  lightBlue: \"#83b9fc\",\n  nearBlack: \"#17153f\",\n  nearBlackWithMinorTransparency: \"rgba(0,0,0,.25)\",\n  red: \"#aa0818\",\n  darkRed: \"#810612\",\n  white: \"#FFFFFF\",\n  whiteWithTransparency: \"rgba(255,255,255,.07)\",\n};\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: \"dark\",\n      background: {\n        default: COLORS.nearBlack,\n        paper: COLORS.nearBlack,\n      },\n      divider: COLORS.white,\n      text: {\n        primary: COLORS.white,\n      },\n      primary: {\n        main: COLORS.blueWithTransparency, // #0074FF\n        light: COLORS.lightBlue,\n      },\n      secondary: {\n        main: COLORS.greenWithTransparency, // #00EFD8\n        light: COLORS.lightGreen,\n      },\n      error: {\n        main: COLORS.red,\n      },\n    },\n    typography: {\n      fontFamily: \"'Poppins', sans-serif\",\n      fontSize: 13,\n      h1: {\n        fontWeight: \"600\",\n      },\n      h2: {\n        fontWeight: \"200\",\n      },\n      h4: {\n        fontWeight: \"500\",\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          \"*\": {\n            scrollbarWidth: \"thin\",\n            scrollbarColor: `${COLORS.gray} ${COLORS.nearBlackWithMinorTransparency}`,\n          },\n          \"*::-webkit-scrollbar\": {\n            width: \"8px\",\n            height: \"8px\",\n            backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          },\n          \"*::-webkit-scrollbar-thumb\": {\n            backgroundColor: COLORS.gray,\n            borderRadius: \"4px\",\n          },\n          \"*::-webkit-scrollbar-corner\": {\n            // this hides an annoying white box which appears when both scrollbars are present\n            backgroundColor: \"transparent\",\n          },\n        },\n      },\n      MuiAccordion: {\n        root: {\n          backgroundColor: COLORS.whiteWithTransparency,\n          \"&:before\": {\n            display: \"none\",\n          },\n        },\n        rounded: {\n          \"&:first-child\": {\n            borderTopLeftRadius: \"28px\",\n            borderTopRightRadius: \"28px\",\n          },\n          \"&:last-child\": {\n            borderBottomLeftRadius: \"28px\",\n            borderBottomRightRadius: \"28px\",\n          },\n        },\n      },\n      MuiAlert: {\n        root: {\n          borderRadius: \"8px\",\n          border: \"1px solid\",\n        },\n      },\n      MuiButton: {\n        root: {\n          borderRadius: \"22px\",\n          letterSpacing: \".1em\",\n        },\n        outlinedSizeSmall: {\n          padding: \"6px 9px\",\n          fontSize: \"0.70rem\",\n        },\n      },\n      MuiLink: {\n        root: {\n          color: COLORS.lightBlue,\n        },\n      },\n      MuiPaper: {\n        rounded: {\n          borderRadius: \"28px\",\n          backdropFilter: \"blur(4px)\",\n        },\n      },\n      MuiStepper: {\n        root: {\n          backgroundColor: \"transparent\",\n          padding: 0,\n        },\n      },\n      MuiStep: {\n        root: {\n          backgroundColor: COLORS.whiteWithTransparency,\n          backdropFilter: \"blur(4px)\",\n          borderRadius: \"28px\",\n          padding: \"32px 32px 16px\",\n        },\n      },\n      MuiStepConnector: {\n        lineVertical: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepContent: {\n        root: {\n          borderLeftWidth: 0,\n          marginLeft: 0,\n          paddingLeft: 0,\n        },\n      },\n      MuiStepLabel: {\n        label: {\n          color: COLORS.white,\n          textTransform: \"uppercase\",\n          \"&.MuiStepLabel-active\": {},\n          \"&.MuiStepLabel-completed\": {},\n        },\n      },\n      MuiTabs: {\n        root: {\n          borderBottom: `1px solid ${COLORS.white}`,\n        },\n        indicator: {\n          height: \"100%\",\n          background: \"linear-gradient(20deg, #f44b1b 0%, #eeb430 100%);\",\n          zIndex: -1,\n        },\n      },\n      MuiTab: {\n        root: {\n          color: COLORS.white,\n          fontSize: 18,\n          fontWeight: \"400\",\n          padding: 12,\n          textTransform: \"none\",\n        },\n        textColorInherit: {\n          opacity: 1,\n        },\n      },\n      MuiTableCell: {\n        root: {\n          borderBottom: \"none\",\n        },\n      },\n    },\n  })\n);\n","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_SOLANA,\n} from \"@certusone/wormhole-sdk\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Transaction } from \"./transferSlice\";\n\nconst LAST_STEP = 3;\n\ntype Steps = 0 | 1 | 2 | 3;\n\nexport interface AttestState {\n  activeStep: Steps;\n  sourceChain: ChainId;\n  sourceAsset: string;\n  targetChain: ChainId;\n  attestTx: Transaction | undefined;\n  signedVAAHex: string | undefined;\n  isSending: boolean;\n  isCreating: boolean;\n  createTx: Transaction | undefined;\n}\n\nconst initialState: AttestState = {\n  activeStep: 0,\n  sourceChain: CHAIN_ID_SOLANA,\n  sourceAsset: \"\",\n  targetChain: CHAIN_ID_ETH,\n  attestTx: undefined,\n  signedVAAHex: undefined,\n  isSending: false,\n  isCreating: false,\n  createTx: undefined,\n};\n\nexport const attestSlice = createSlice({\n  name: \"attest\",\n  initialState,\n  reducers: {\n    incrementStep: (state) => {\n      if (state.activeStep < LAST_STEP) state.activeStep++;\n    },\n    decrementStep: (state) => {\n      if (state.activeStep > 0) state.activeStep--;\n    },\n    setStep: (state, action: PayloadAction<Steps>) => {\n      state.activeStep = action.payload;\n    },\n    setSourceChain: (state, action: PayloadAction<ChainId>) => {\n      const prevSourceChain = state.sourceChain;\n      state.sourceChain = action.payload;\n      state.sourceAsset = \"\";\n      if (state.targetChain === action.payload) {\n        state.targetChain = prevSourceChain;\n      }\n    },\n    setSourceAsset: (state, action: PayloadAction<string>) => {\n      state.sourceAsset = action.payload;\n    },\n    setTargetChain: (state, action: PayloadAction<ChainId>) => {\n      const prevTargetChain = state.targetChain;\n      state.targetChain = action.payload;\n      if (state.sourceChain === action.payload) {\n        state.sourceChain = prevTargetChain;\n        state.activeStep = 0;\n        state.sourceAsset = \"\";\n      }\n    },\n    setAttestTx: (state, action: PayloadAction<Transaction>) => {\n      state.attestTx = action.payload;\n    },\n    setSignedVAAHex: (state, action: PayloadAction<string>) => {\n      state.signedVAAHex = action.payload;\n      state.isSending = false;\n      state.activeStep = 3;\n    },\n    setIsSending: (state, action: PayloadAction<boolean>) => {\n      state.isSending = action.payload;\n    },\n    setIsCreating: (state, action: PayloadAction<boolean>) => {\n      state.isCreating = action.payload;\n    },\n    setCreateTx: (state, action: PayloadAction<Transaction>) => {\n      state.createTx = action.payload;\n      state.isCreating = false;\n    },\n    reset: (state) => ({\n      ...initialState,\n      sourceChain: state.sourceChain,\n      targetChain: state.targetChain,\n    }),\n  },\n});\n\nexport const {\n  incrementStep,\n  decrementStep,\n  setStep,\n  setSourceChain,\n  setSourceAsset,\n  setTargetChain,\n  setAttestTx,\n  setSignedVAAHex,\n  setIsSending,\n  setIsCreating,\n  setCreateTx,\n  reset,\n} = attestSlice.actions;\n\nexport default attestSlice.reducer;\n","export type DataWrapper<T> = {\n  data: T | null;\n  error: any | null;\n  isFetching: boolean;\n  receivedAt: string | null;\n  //possibly invalidate\n};\n\nexport function getEmptyDataWrapper() {\n  return {\n    data: null,\n    error: null,\n    isFetching: false,\n    receivedAt: null,\n  };\n}\n\nexport function receiveDataWrapper<T>(data: T): DataWrapper<T> {\n  return {\n    data,\n    error: null,\n    isFetching: false,\n    receivedAt: new Date().toISOString(),\n  };\n}\n\nexport function errorDataWrapper<T>(error: string): DataWrapper<T> {\n  return {\n    data: null,\n    error,\n    isFetching: false,\n    receivedAt: null,\n  };\n}\n\nexport function fetchDataWrapper() {\n  return {\n    data: null,\n    error: null,\n    isFetching: true,\n    receivedAt: null,\n  };\n}\n","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_SOLANA,\n} from \"@certusone/wormhole-sdk\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { StateSafeWormholeWrappedInfo } from \"../hooks/useCheckIfWormholeWrapped\";\nimport { ForeignAssetInfo } from \"../hooks/useFetchForeignAsset\";\nimport {\n  DataWrapper,\n  errorDataWrapper,\n  fetchDataWrapper,\n  getEmptyDataWrapper,\n  receiveDataWrapper,\n} from \"./helpers\";\nimport { ParsedTokenAccount, Transaction } from \"./transferSlice\";\n\nconst LAST_STEP = 3;\n\ntype Steps = 0 | 1 | 2 | 3;\n\n// these all are optional so NFT could share TokenSelectors\nexport interface NFTParsedTokenAccount extends ParsedTokenAccount {\n  tokenId?: string;\n  uri?: string;\n  animation_url?: string | null;\n  external_url?: string | null;\n  image?: string;\n  image_256?: string;\n  nftName?: string;\n  description?: string;\n}\n\nexport interface NFTState {\n  activeStep: Steps;\n  sourceChain: ChainId;\n  isSourceAssetWormholeWrapped: boolean | undefined;\n  originChain: ChainId | undefined;\n  originAsset: string | undefined;\n  originTokenId: string | undefined;\n  sourceWalletAddress: string | undefined;\n  sourceParsedTokenAccount: NFTParsedTokenAccount | undefined;\n  sourceParsedTokenAccounts: DataWrapper<NFTParsedTokenAccount[]>;\n  targetChain: ChainId;\n  targetAddressHex: string | undefined;\n  targetAsset: DataWrapper<ForeignAssetInfo>;\n  transferTx: Transaction | undefined;\n  signedVAAHex: string | undefined;\n  isSending: boolean;\n  isRedeeming: boolean;\n  redeemTx: Transaction | undefined;\n  isRecovery: boolean;\n}\n\nconst initialState: NFTState = {\n  activeStep: 0,\n  sourceChain: CHAIN_ID_SOLANA,\n  isSourceAssetWormholeWrapped: false,\n  sourceWalletAddress: undefined,\n  sourceParsedTokenAccount: undefined,\n  sourceParsedTokenAccounts: getEmptyDataWrapper(),\n  originChain: undefined,\n  originAsset: undefined,\n  originTokenId: undefined,\n  targetChain: CHAIN_ID_ETH,\n  targetAddressHex: undefined,\n  targetAsset: getEmptyDataWrapper(),\n  transferTx: undefined,\n  signedVAAHex: undefined,\n  isSending: false,\n  isRedeeming: false,\n  redeemTx: undefined,\n  isRecovery: false,\n};\n\nexport const nftSlice = createSlice({\n  name: \"nft\",\n  initialState,\n  reducers: {\n    incrementStep: (state) => {\n      if (state.activeStep < LAST_STEP) state.activeStep++;\n    },\n    decrementStep: (state) => {\n      if (state.activeStep > 0) state.activeStep--;\n    },\n    setStep: (state, action: PayloadAction<Steps>) => {\n      state.activeStep = action.payload;\n    },\n    setSourceChain: (state, action: PayloadAction<ChainId>) => {\n      const prevSourceChain = state.sourceChain;\n      state.sourceChain = action.payload;\n      state.sourceParsedTokenAccount = undefined;\n      state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetAddressHex = undefined;\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.originChain = undefined;\n      state.originAsset = undefined;\n      state.originTokenId = undefined;\n      if (state.targetChain === action.payload) {\n        state.targetChain = prevSourceChain;\n      }\n    },\n    setSourceWormholeWrappedInfo: (\n      state,\n      action: PayloadAction<StateSafeWormholeWrappedInfo>\n    ) => {\n      state.isSourceAssetWormholeWrapped = action.payload.isWrapped;\n      state.originChain = action.payload.chainId;\n      state.originAsset = action.payload.assetAddress;\n      state.originTokenId = action.payload.tokenId;\n    },\n    setSourceWalletAddress: (\n      state,\n      action: PayloadAction<string | undefined>\n    ) => {\n      state.sourceWalletAddress = action.payload;\n    },\n    setSourceParsedTokenAccount: (\n      state,\n      action: PayloadAction<NFTParsedTokenAccount | undefined>\n    ) => {\n      state.sourceParsedTokenAccount = action.payload;\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetAddressHex = undefined;\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.originChain = undefined;\n      state.originAsset = undefined;\n      state.originTokenId = undefined;\n    },\n    setSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<NFTParsedTokenAccount[] | undefined>\n    ) => {\n      state.sourceParsedTokenAccounts = action.payload\n        ? receiveDataWrapper(action.payload)\n        : getEmptyDataWrapper();\n    },\n    fetchSourceParsedTokenAccounts: (state) => {\n      state.sourceParsedTokenAccounts = fetchDataWrapper();\n    },\n    errorSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<string | undefined>\n    ) => {\n      state.sourceParsedTokenAccounts = errorDataWrapper(\n        action.payload || \"An unknown error occurred.\"\n      );\n    },\n    receiveSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<NFTParsedTokenAccount[]>\n    ) => {\n      state.sourceParsedTokenAccounts = receiveDataWrapper(action.payload);\n    },\n    setTargetChain: (state, action: PayloadAction<ChainId>) => {\n      const prevTargetChain = state.targetChain;\n      state.targetChain = action.payload;\n      state.targetAddressHex = undefined;\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      if (state.sourceChain === action.payload) {\n        state.sourceChain = prevTargetChain;\n        state.activeStep = 0;\n        state.sourceParsedTokenAccount = undefined;\n        state.isSourceAssetWormholeWrapped = undefined;\n        state.originChain = undefined;\n        state.originAsset = undefined;\n        state.originTokenId = undefined;\n        state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      }\n    },\n    setTargetAddressHex: (state, action: PayloadAction<string | undefined>) => {\n      state.targetAddressHex = action.payload;\n    },\n    setTargetAsset: (\n      state,\n      action: PayloadAction<DataWrapper<ForeignAssetInfo>>\n    ) => {\n      state.targetAsset = action.payload;\n    },\n    setTransferTx: (state, action: PayloadAction<Transaction>) => {\n      state.transferTx = action.payload;\n    },\n    setSignedVAAHex: (state, action: PayloadAction<string>) => {\n      state.signedVAAHex = action.payload;\n      state.isSending = false;\n      state.activeStep = 3;\n    },\n    setIsSending: (state, action: PayloadAction<boolean>) => {\n      state.isSending = action.payload;\n    },\n    setIsRedeeming: (state, action: PayloadAction<boolean>) => {\n      state.isRedeeming = action.payload;\n    },\n    setRedeemTx: (state, action: PayloadAction<Transaction>) => {\n      state.redeemTx = action.payload;\n      state.isRedeeming = false;\n    },\n    reset: (state) => ({\n      ...initialState,\n      sourceChain: state.sourceChain,\n      targetChain: state.targetChain,\n    }),\n    setRecoveryVaa: (\n      state,\n      action: PayloadAction<{\n        vaa: any;\n        parsedPayload: {\n          targetChain: ChainId;\n          targetAddress: string;\n          originChain: ChainId;\n          originAddress: string; //TODO maximum amount of fields\n        };\n      }>\n    ) => {\n      const prevTargetChain = state.targetChain;\n      state.signedVAAHex = action.payload.vaa;\n      state.targetChain = action.payload.parsedPayload.targetChain;\n      if (state.sourceChain === action.payload.parsedPayload.targetChain) {\n        state.sourceChain = prevTargetChain;\n      }\n      state.sourceParsedTokenAccount = undefined;\n      state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      state.targetAsset = getEmptyDataWrapper();\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.targetAddressHex = action.payload.parsedPayload.targetAddress;\n      state.originChain = action.payload.parsedPayload.originChain;\n      state.originAsset = action.payload.parsedPayload.originAddress;\n      state.originTokenId = undefined;\n      state.activeStep = 3;\n      state.isRecovery = true;\n    },\n  },\n});\n\nexport const {\n  incrementStep,\n  decrementStep,\n  setStep,\n  setSourceChain,\n  setSourceWormholeWrappedInfo,\n  setSourceWalletAddress,\n  setSourceParsedTokenAccount,\n  setSourceParsedTokenAccounts,\n  receiveSourceParsedTokenAccounts,\n  errorSourceParsedTokenAccounts,\n  fetchSourceParsedTokenAccounts,\n  setTargetChain,\n  setTargetAddressHex,\n  setTargetAsset,\n  setTransferTx,\n  setSignedVAAHex,\n  setIsSending,\n  setIsRedeeming,\n  setRedeemTx,\n  reset,\n  setRecoveryVaa,\n} = nftSlice.actions;\n\nexport default nftSlice.reducer;\n","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_SOLANA,\n} from \"@certusone/wormhole-sdk\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { StateSafeWormholeWrappedInfo } from \"../hooks/useCheckIfWormholeWrapped\";\nimport { ForeignAssetInfo } from \"../hooks/useFetchForeignAsset\";\nimport {\n  DataWrapper,\n  errorDataWrapper,\n  fetchDataWrapper,\n  getEmptyDataWrapper,\n  receiveDataWrapper,\n} from \"./helpers\";\n\nconst LAST_STEP = 3;\n\ntype Steps = 0 | 1 | 2 | 3;\n\nexport interface ParsedTokenAccount {\n  publicKey: string;\n  mintKey: string;\n  amount: string;\n  decimals: number;\n  uiAmount: number;\n  uiAmountString: string;\n  symbol?: string;\n  name?: string;\n  logo?: string;\n  isNativeAsset?: boolean;\n}\n\nexport interface Transaction {\n  id: string;\n  block: number;\n}\n\nexport interface TransferState {\n  activeStep: Steps;\n  sourceChain: ChainId;\n  isSourceAssetWormholeWrapped: boolean | undefined;\n  originChain: ChainId | undefined;\n  originAsset: string | undefined;\n  sourceWalletAddress: string | undefined;\n  sourceParsedTokenAccount: ParsedTokenAccount | undefined;\n  sourceParsedTokenAccounts: DataWrapper<ParsedTokenAccount[]>;\n  amount: string;\n  targetChain: ChainId;\n  targetAddressHex: string | undefined;\n  targetAsset: DataWrapper<ForeignAssetInfo>;\n  targetParsedTokenAccount: ParsedTokenAccount | undefined;\n  transferTx: Transaction | undefined;\n  signedVAAHex: string | undefined;\n  isSending: boolean;\n  isRedeeming: boolean;\n  redeemTx: Transaction | undefined;\n  isApproving: boolean;\n  isRecovery: boolean;\n}\n\nconst initialState: TransferState = {\n  activeStep: 0,\n  sourceChain: CHAIN_ID_SOLANA,\n  isSourceAssetWormholeWrapped: false,\n  sourceWalletAddress: undefined,\n  sourceParsedTokenAccount: undefined,\n  sourceParsedTokenAccounts: getEmptyDataWrapper(),\n  originChain: undefined,\n  originAsset: undefined,\n  amount: \"\",\n  targetChain: CHAIN_ID_ETH,\n  targetAddressHex: undefined,\n  targetAsset: getEmptyDataWrapper(),\n  targetParsedTokenAccount: undefined,\n  transferTx: undefined,\n  signedVAAHex: undefined,\n  isSending: false,\n  isRedeeming: false,\n  redeemTx: undefined,\n  isApproving: false,\n  isRecovery: false,\n};\n\nexport const transferSlice = createSlice({\n  name: \"transfer\",\n  initialState,\n  reducers: {\n    incrementStep: (state) => {\n      if (state.activeStep < LAST_STEP) state.activeStep++;\n    },\n    decrementStep: (state) => {\n      if (state.activeStep > 0) state.activeStep--;\n    },\n    setStep: (state, action: PayloadAction<Steps>) => {\n      state.activeStep = action.payload;\n    },\n    setSourceChain: (state, action: PayloadAction<ChainId>) => {\n      const prevSourceChain = state.sourceChain;\n      state.sourceChain = action.payload;\n      state.sourceParsedTokenAccount = undefined;\n      state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetParsedTokenAccount = undefined;\n      state.targetAddressHex = undefined;\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.originChain = undefined;\n      state.originAsset = undefined;\n      if (state.targetChain === action.payload) {\n        state.targetChain = prevSourceChain;\n      }\n    },\n    setSourceWormholeWrappedInfo: (\n      state,\n      action: PayloadAction<StateSafeWormholeWrappedInfo>\n    ) => {\n      state.isSourceAssetWormholeWrapped = action.payload.isWrapped;\n      state.originChain = action.payload.chainId;\n      state.originAsset = action.payload.assetAddress;\n    },\n    setSourceWalletAddress: (\n      state,\n      action: PayloadAction<string | undefined>\n    ) => {\n      state.sourceWalletAddress = action.payload;\n    },\n    setSourceParsedTokenAccount: (\n      state,\n      action: PayloadAction<ParsedTokenAccount | undefined>\n    ) => {\n      state.sourceParsedTokenAccount = action.payload;\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetParsedTokenAccount = undefined;\n      state.targetAddressHex = undefined;\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.originChain = undefined;\n      state.originAsset = undefined;\n    },\n    setSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<ParsedTokenAccount[] | undefined>\n    ) => {\n      state.sourceParsedTokenAccounts = action.payload\n        ? receiveDataWrapper(action.payload)\n        : getEmptyDataWrapper();\n    },\n    fetchSourceParsedTokenAccounts: (state) => {\n      state.sourceParsedTokenAccounts = fetchDataWrapper();\n    },\n    errorSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<string | undefined>\n    ) => {\n      state.sourceParsedTokenAccounts = errorDataWrapper(\n        action.payload || \"An unknown error occurred.\"\n      );\n    },\n    receiveSourceParsedTokenAccounts: (\n      state,\n      action: PayloadAction<ParsedTokenAccount[]>\n    ) => {\n      state.sourceParsedTokenAccounts = receiveDataWrapper(action.payload);\n    },\n    setAmount: (state, action: PayloadAction<string>) => {\n      state.amount = action.payload;\n    },\n    setTargetChain: (state, action: PayloadAction<ChainId>) => {\n      const prevTargetChain = state.targetChain;\n      state.targetChain = action.payload;\n      state.targetAddressHex = undefined;\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetParsedTokenAccount = undefined;\n      if (state.sourceChain === action.payload) {\n        state.sourceChain = prevTargetChain;\n        state.activeStep = 0;\n        state.sourceParsedTokenAccount = undefined;\n        state.isSourceAssetWormholeWrapped = undefined;\n        state.originChain = undefined;\n        state.originAsset = undefined;\n        state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      }\n    },\n    setTargetAddressHex: (state, action: PayloadAction<string | undefined>) => {\n      state.targetAddressHex = action.payload;\n    },\n    setTargetAsset: (\n      state,\n      action: PayloadAction<DataWrapper<ForeignAssetInfo>>\n    ) => {\n      state.targetAsset = action.payload;\n      state.targetParsedTokenAccount = undefined;\n    },\n    setTargetParsedTokenAccount: (\n      state,\n      action: PayloadAction<ParsedTokenAccount | undefined>\n    ) => {\n      state.targetParsedTokenAccount = action.payload;\n    },\n    setTransferTx: (state, action: PayloadAction<Transaction>) => {\n      state.transferTx = action.payload;\n    },\n    setSignedVAAHex: (state, action: PayloadAction<string>) => {\n      state.signedVAAHex = action.payload;\n      state.isSending = false;\n      state.activeStep = 3;\n    },\n    setIsSending: (state, action: PayloadAction<boolean>) => {\n      state.isSending = action.payload;\n    },\n    setIsRedeeming: (state, action: PayloadAction<boolean>) => {\n      state.isRedeeming = action.payload;\n    },\n    setRedeemTx: (state, action: PayloadAction<Transaction>) => {\n      state.redeemTx = action.payload;\n      state.isRedeeming = false;\n    },\n    setIsApproving: (state, action: PayloadAction<boolean>) => {\n      state.isApproving = action.payload;\n    },\n    reset: (state) => ({\n      ...initialState,\n      sourceChain: state.sourceChain,\n      targetChain: state.targetChain,\n    }),\n    setRecoveryVaa: (\n      state,\n      action: PayloadAction<{\n        vaa: any;\n        parsedPayload: {\n          targetChain: ChainId;\n          targetAddress: string;\n          originChain: ChainId;\n          originAddress: string;\n          amount: string;\n        };\n      }>\n    ) => {\n      const prevTargetChain = state.targetChain;\n      state.signedVAAHex = action.payload.vaa;\n      state.targetChain = action.payload.parsedPayload.targetChain;\n      if (state.sourceChain === action.payload.parsedPayload.targetChain) {\n        state.sourceChain = prevTargetChain;\n      }\n      state.sourceParsedTokenAccount = undefined;\n      state.sourceParsedTokenAccounts = getEmptyDataWrapper();\n      // clear targetAsset so that components that fire before useFetchTargetAsset don't get stale data\n      state.targetAsset = getEmptyDataWrapper();\n      state.targetParsedTokenAccount = undefined;\n      state.isSourceAssetWormholeWrapped = undefined;\n      state.targetAddressHex = action.payload.parsedPayload.targetAddress;\n      state.originChain = action.payload.parsedPayload.originChain;\n      state.originAsset = action.payload.parsedPayload.originAddress;\n      state.amount = action.payload.parsedPayload.amount;\n      state.activeStep = 3;\n      state.isRecovery = true;\n    },\n  },\n});\n\nexport const {\n  incrementStep,\n  decrementStep,\n  setStep,\n  setSourceChain,\n  setSourceWormholeWrappedInfo,\n  setSourceWalletAddress,\n  setSourceParsedTokenAccount,\n  setSourceParsedTokenAccounts,\n  receiveSourceParsedTokenAccounts,\n  errorSourceParsedTokenAccounts,\n  fetchSourceParsedTokenAccounts,\n  setAmount,\n  setTargetChain,\n  setTargetAddressHex,\n  setTargetAsset,\n  setTargetParsedTokenAccount,\n  setTransferTx,\n  setSignedVAAHex,\n  setIsSending,\n  setIsRedeeming,\n  setRedeemTx,\n  setIsApproving,\n  reset,\n  setRecoveryVaa,\n} = transferSlice.actions;\n\nexport default transferSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TokenInfo } from \"@solana/spl-token-registry\";\nimport { TerraTokenMap } from \"../hooks/useTerraTokenMap\";\nimport { MarketsMap } from \"../hooks/useMarketsMap\";\nimport {\n  DataWrapper,\n  errorDataWrapper,\n  fetchDataWrapper,\n  getEmptyDataWrapper,\n  receiveDataWrapper,\n} from \"./helpers\";\n\nexport interface TokenMetadataState {\n  solanaTokenMap: DataWrapper<TokenInfo[]>;\n  terraTokenMap: DataWrapper<TerraTokenMap>; //TODO make a decent type for this.\n  marketsMap: DataWrapper<MarketsMap>;\n}\n\nconst initialState: TokenMetadataState = {\n  solanaTokenMap: getEmptyDataWrapper(),\n  terraTokenMap: getEmptyDataWrapper(),\n  marketsMap: getEmptyDataWrapper(),\n};\n\nexport const tokenSlice = createSlice({\n  name: \"tokenInfos\",\n  initialState,\n  reducers: {\n    receiveSolanaTokenMap: (state, action: PayloadAction<TokenInfo[]>) => {\n      state.solanaTokenMap = receiveDataWrapper(action.payload);\n    },\n    fetchSolanaTokenMap: (state) => {\n      state.solanaTokenMap = fetchDataWrapper();\n    },\n    errorSolanaTokenMap: (state, action: PayloadAction<string>) => {\n      state.solanaTokenMap = errorDataWrapper(action.payload);\n    },\n\n    receiveTerraTokenMap: (state, action: PayloadAction<TerraTokenMap>) => {\n      state.terraTokenMap = receiveDataWrapper(action.payload);\n    },\n    fetchTerraTokenMap: (state) => {\n      state.terraTokenMap = fetchDataWrapper();\n    },\n    errorTerraTokenMap: (state, action: PayloadAction<string>) => {\n      state.terraTokenMap = errorDataWrapper(action.payload);\n    },\n\n    receiveMarketsMap: (state, action: PayloadAction<MarketsMap>) => {\n      state.marketsMap = receiveDataWrapper(action.payload);\n    },\n    fetchMarketsMap: (state) => {\n      state.marketsMap = fetchDataWrapper();\n    },\n    errorMarketsMap: (state, action: PayloadAction<string>) => {\n      state.marketsMap = errorDataWrapper(action.payload);\n    },\n\n    reset: () => initialState,\n  },\n});\n\nexport const {\n  receiveSolanaTokenMap,\n  fetchSolanaTokenMap,\n  errorSolanaTokenMap,\n  receiveTerraTokenMap,\n  fetchTerraTokenMap,\n  errorTerraTokenMap,\n  receiveMarketsMap,\n  fetchMarketsMap,\n  errorMarketsMap,\n  reset,\n} = tokenSlice.actions;\n\nexport default tokenSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TERRA_DEFAULT_FEE_DENOM } from \"../utils/consts\";\n\nexport interface FeeSliceState {\n  terraFeeDenom: string;\n}\n\nconst initialState: FeeSliceState = {\n  terraFeeDenom: TERRA_DEFAULT_FEE_DENOM,\n};\n\nexport const feeSlice = createSlice({\n  name: \"fee\",\n  initialState,\n  reducers: {\n    setTerraFeeDenom: (state, action: PayloadAction<string>) => {\n      state.terraFeeDenom = action.payload;\n    },\n    reset: () => initialState,\n  },\n});\n\nexport const { setTerraFeeDenom, reset } = feeSlice.actions;\n\nexport default feeSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport attestReducer from \"./attestSlice\";\nimport nftReducer from \"./nftSlice\";\nimport transferReducer from \"./transferSlice\";\nimport tokenReducer from \"./tokenSlice\";\nimport feeReducer from \"./feeSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    attest: attestReducer,\n    nft: nftReducer,\n    transfer: transferReducer,\n    tokens: tokenReducer,\n    fee: feeReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport BackgroundImage from \"./components/BackgroundImage\";\nimport { BetaContextProvider } from \"./contexts/BetaContext\";\nimport { EthereumProviderProvider } from \"./contexts/EthereumProviderContext\";\nimport { SolanaWalletProvider } from \"./contexts/SolanaWalletContext.tsx\";\nimport { TerraWalletProvider } from \"./contexts/TerraWalletContext.tsx\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { theme } from \"./muiTheme\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ErrorBoundary>\n          <SnackbarProvider maxSnack={3}>\n            <BetaContextProvider>\n              <SolanaWalletProvider>\n                <EthereumProviderProvider>\n                  <TerraWalletProvider>\n                    <HashRouter>\n                      <BackgroundImage />\n                      <App />\n                    </HashRouter>\n                  </TerraWalletProvider>\n                </EthereumProviderProvider>\n              </SolanaWalletProvider>\n            </BetaContextProvider>\n          </SnackbarProvider>\n        </ErrorBoundary>\n      </ThemeProvider>\n    </Provider>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}